@use '../../sass/lib';

.Main {
  box-sizing: border-box;
  padding: 45px 0 40px 0;
  position: relative;

  & .Main__title {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
    width: 350px;

    color: #42567a;
    font-size: 56px;
    font-weight: 700;
    line-height: 120%;

    position: absolute;
    top: 0;
    left: 0;

    &::before {
      box-sizing: border-box;
      content: '';
      display: block;
      position: absolute;
      left: -80px;
      height: 100%;
      width: 5px;
      background-image: linear-gradient(0deg, #ef5da8 0%, #3877ee 100%);
    }

    @include lib.media('max') {
      width: lib.calcValueBetweenMinMax(120, 350);
      font-size: lib.calcValueBetweenMinMax(20, 56);

      &::before {
        left: lib.calcValueBetweenMinMax(-20, -80);
        width: lib.calcValueBetweenMinMax(0, 5);
      }
    }

    @include lib.media('min') {
      width: 120px;
      font-size: 20px;

      &::before {
        left: -20px;
        width: 0px;
      }
    }
  }

  & .circle {
    $circleMaxSize: 530;
    $circleMinSize: 150;

    box-sizing: border-box;
    margin: 0 auto;
    width: #{$circleMaxSize}px;
    height: #{$circleMaxSize}px;
    border: 1px solid rgb(66, 86, 122, 0.2);
    border-radius: 50%;
    position: relative;

    @include lib.media('max') {
      width: lib.calcValueBetweenMinMax($circleMinSize, $circleMaxSize);
      height: lib.calcValueBetweenMinMax($circleMinSize, $circleMaxSize);
    }

    @include lib.media('min') {
      width: #{$circleMinSize}px;
      height: #{$circleMinSize}px;
    }

    &::before,
    &::after {
      box-sizing: border-box;
      content: '';
      display: block;
      background: rgb(66, 86, 122, 0.1);
      position: absolute;
    }

    &::before {
      height: 1px;
      width: 100vw;
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
    }

    &::after {
      height: 100vh;
      width: 1px;
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
    }

    & .interval {
      display: flex;
      align-items: center;
      gap: 100px;

      font-size: 200px;
      font-weight: 700;
      line-height: 80%;
      letter-spacing: -4px;

      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);

      & .from {
        color: #5d5fef;
      }

      & .to {
        color: #ef5da8;
      }

      @include lib.media('max') {
        gap: lib.calcValueBetweenMinMax(30, 100);
        font-size: lib.calcValueBetweenMinMax(56, 200);
        letter-spacing: lib.calcValueBetweenMinMax(-1.12, -4);
      }

      @include lib.media('min') {
        gap: 30px;
        font-size: 56px;
        letter-spacing: -1.12px;
      }
    }

    & .category {
      $categoryMaxSize: 56;
      $categoryMinSize: 28;

      box-sizing: border-box;
      width: 6px;
      height: 6px;

      border-radius: 50%;
      border: 1px solid rgb(48, 62, 88, 0.5);
      background: #42567a;
      cursor: pointer;

      color: #42567a;
      font-size: 20px;
      font-weight: 400;
      line-height: 150%;

      position: absolute;
      top: calc(-6px / 2);
      left: calc(50% - 6px / 2);
      transform-origin: 50% calc((#{$circleMaxSize}px + 6px) / 2) 0;
      transition:
        transform 1s ease,
        transform-origin 1s ease,
        background 1s ease,
        top 1s ease,
        left 1s ease,
        width 1s ease,
        height 1s ease;

      @include lib.media('max') {
        font-size: lib.calcValueBetweenMinMax(14, 20);
        transform-origin: 50%
          calc((lib.calcValueBetweenMinMax($circleMinSize, $circleMaxSize) + 6px) / 2) 0;
      }

      @include lib.media('min') {
        font-size: 14px;
        transform-origin: 50% calc((#{$circleMinSize}px + 6px) / 2) 0;
      }

      & .category__content {
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;

        position: relative;
        transition: transform 1s ease;

        & .category__title {
          font-weight: 700;
          position: absolute;
          left: calc(100% + 20px);
          opacity: 0;
          visibility: hidden;
          transition:
            opacity 1s ease,
            visibility 1s ease;

          @include lib.media('max') {
            left: calc(100% + lib.calcValueBetweenMinMax(5, 20));
            // left: calc(100% + calc(5px + (20 - 5) * ((100vw - 320px) / (1439 - 320))));
          }

          @include lib.media('min') {
            left: calc(100% + 5px);
          }
        }

        & .category__id {
          opacity: 0;
          transition: opacity 1s ease;
        }
      }

      &:hover {
        width: #{$categoryMaxSize}px;
        height: #{$categoryMaxSize}px;

        border-radius: 50%;
        border: 1px solid rgb(48, 62, 88, 0.5);
        background: #f4f5f9;

        top: calc(-#{$categoryMaxSize}px / 2);
        left: calc(50% - #{$categoryMaxSize}px / 2);
        transform-origin: 50% calc((#{$circleMaxSize}px + #{$categoryMaxSize}px) / 2) 0;

        & .category__id {
          opacity: 1;
        }

        @include lib.media('max') {
          width: lib.calcValueBetweenMinMax($categoryMinSize, $categoryMaxSize);
          height: lib.calcValueBetweenMinMax($categoryMinSize, $categoryMaxSize);
          top: calc(-1 * lib.calcValueBetweenMinMax($categoryMinSize, $categoryMaxSize) / 2);
          left: calc(50% - lib.calcValueBetweenMinMax($categoryMinSize, $categoryMaxSize) / 2);
          transform-origin: 50%
            calc(
              (
                  lib.calcValueBetweenMinMax($circleMinSize, $circleMaxSize) +
                    lib.calcValueBetweenMinMax($categoryMinSize, $categoryMaxSize)
                ) / 2
            )
            0;
        }

        @include lib.media('min') {
          width: #{$categoryMinSize}px;
          height: #{$categoryMinSize}px;
          top: calc(-#{$categoryMinSize}px / 2);
          left: calc(50% - #{$categoryMinSize}px / 2);
          transform-origin: 50% calc((#{$circleMinSize}px + #{$categoryMinSize}px) / 2) 0;
        }
      }

      &.active {
        width: #{$categoryMaxSize}px;
        height: #{$categoryMaxSize}px;

        border-radius: 50%;
        border: 1px solid rgb(48, 62, 88, 0.5);
        background: #f4f5f9;
        pointer-events: none;

        top: calc(-#{$categoryMaxSize}px / 2);
        left: calc(50% - #{$categoryMaxSize}px / 2);
        transform-origin: 50% calc((#{$circleMaxSize}px + #{$categoryMaxSize}px) / 2) 0;

        & .category__title {
          visibility: visible;
          opacity: 1;
        }

        & .category__id {
          opacity: 1;
        }

        @include lib.media('max') {
          width: lib.calcValueBetweenMinMax($categoryMinSize, $categoryMaxSize);
          height: lib.calcValueBetweenMinMax($categoryMinSize, $categoryMaxSize);
          top: calc(-1 * lib.calcValueBetweenMinMax($categoryMinSize, $categoryMaxSize) / 2);
          left: calc(50% - lib.calcValueBetweenMinMax($categoryMinSize, $categoryMaxSize) / 2);
          transform-origin: 50%
            calc(
              (
                  lib.calcValueBetweenMinMax($circleMinSize, $circleMaxSize) +
                    lib.calcValueBetweenMinMax($categoryMinSize, $categoryMaxSize)
                ) / 2
            )
            0;
        }

        @include lib.media('min') {
          width: #{$categoryMinSize}px;
          height: #{$categoryMinSize}px;
          top: calc(-#{$categoryMinSize}px / 2);
          left: calc(50% - #{$categoryMinSize}px / 2);
          transform-origin: 50% calc((#{$circleMinSize}px + #{$categoryMinSize}px) / 2) 0;
        }
      }
    }
  }
}

.Main__pagination {
  position: absolute;
  left: 0;
  bottom: 0;
}
